Terminals unused in grammar

   APPLY
   LEAF
   LOAD


State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: goal $end

    1 goal: translation_unit

    2 primary_expression: IDENTIFIER
    3                   | CONSTANT
    4                   | STRING_LITERAL
    5                   | '(' expression ')'

    6 postfix_expression: primary_expression
    7                   | postfix_expression '(' ')'
    8                   | postfix_expression '(' argument_expression_list ')'

    9 argument_expression_list: assignment_expression
   10                         | argument_expression_list ',' assignment_expression

   11 unary_expression: postfix_expression

   12 multiplicative_expression: unary_expression
   13                          | multiplicative_expression '*' unary_expression
   14                          | multiplicative_expression '/' unary_expression
   15                          | multiplicative_expression '%' unary_expression

   16 additive_expression: multiplicative_expression
   17                    | additive_expression '+' multiplicative_expression
   18                    | additive_expression '-' multiplicative_expression

   19 relational_expression: additive_expression
   20                      | relational_expression '<' additive_expression
   21                      | relational_expression '>' additive_expression
   22                      | relational_expression LE_OP additive_expression
   23                      | relational_expression GE_OP additive_expression

   24 equality_expression: relational_expression
   25                    | equality_expression EQ_OP relational_expression
   26                    | equality_expression NE_OP relational_expression

   27 assignment_expression: equality_expression
   28                      | unary_expression '=' assignment_expression

   29 expression: assignment_expression
   30           | expression ',' assignment_expression

   31 declaration: declaration_specifiers ';'
   32            | function_definition
   33            | declaration_specifiers init_declarator_list ';'

   34 declaration_specifiers: storage_class_specifier
   35                       | storage_class_specifier declaration_specifiers
   36                       | type_specifier
   37                       | type_specifier declaration_specifiers

   38 init_declarator_list: init_declarator
   39                     | init_declarator_list ',' init_declarator

   40 init_declarator: declarator
   41                | declarator '=' assignment_expression

   42 storage_class_specifier: EXTERN
   43                        | AUTO

   44 type_specifier: VOID
   45               | INT
   46               | FUNCTION

   47 declarator: direct_declarator

   48 direct_declarator: IDENTIFIER
   49                  | '(' declarator ')'
   50                  | direct_declarator '(' parameter_list ')'
   51                  | direct_declarator '(' identifier_list ')'
   52                  | direct_declarator '(' ')'

   53 parameter_list: parameter_declaration
   54               | parameter_list ',' parameter_declaration

   55 parameter_declaration: declaration_specifiers declarator
   56                      | declaration_specifiers abstract_declarator
   57                      | declaration_specifiers

   58 identifier_list: IDENTIFIER
   59                | identifier_list ',' IDENTIFIER

   60 abstract_declarator: direct_abstract_declarator

   61 direct_abstract_declarator: '(' abstract_declarator ')'
   62                           | '(' ')'
   63                           | '(' parameter_list ')'
   64                           | direct_abstract_declarator '(' ')'
   65                           | direct_abstract_declarator '(' parameter_list ')'

   66 statement: compound_statement
   67          | expression_statement
   68          | selection_statement
   69          | iteration_statement
   70          | jump_statement

   71 compound_statement: '{' '}'
   72                   | '{' statement_list '}'
   73                   | '{' declaration_list '}'
   74                   | '{' declaration_list statement_list '}'

   75 declaration_list: declaration
   76                 | declaration_list declaration

   77 statement_list: statement
   78               | statement_list statement

   79 expression_statement: ';'
   80                     | expression ';'

   81 selection_statement: IF '(' expression ')' statement
   82                    | IF '(' expression ')' statement ELSE statement

   83 iteration_statement: WHILE '(' expression ')' statement

   84 jump_statement: CONTINUE ';'
   85               | BREAK ';'
   86               | RETURN ';'
   87               | RETURN expression ';'

   88 translation_unit: external_declaration
   89                 | translation_unit external_declaration

   90 external_declaration: declaration

   91 function_definition: declaration_specifiers declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'%' (37) 15
'(' (40) 5 7 8 49 50 51 52 61 62 63 64 65 81 82 83
')' (41) 5 7 8 49 50 51 52 61 62 63 64 65 81 82 83
'*' (42) 13
'+' (43) 17
',' (44) 10 30 39 54 59
'-' (45) 18
'/' (47) 14
';' (59) 31 33 79 80 84 85 86 87
'<' (60) 20
'=' (61) 28 41
'>' (62) 21
'{' (123) 71 72 73 74
'}' (125) 71 72 73 74
error (256)
IDENTIFIER (258) 2 48 58 59
CONSTANT (259) 3
STRING_LITERAL (260) 4
LE_OP (261) 22
GE_OP (262) 23
EQ_OP (263) 25
NE_OP (264) 26
EXTERN (265) 42
AUTO (266) 43
INT (267) 45
VOID (268) 44
FUNCTION (269) 46
APPLY (270)
LEAF (271)
IF (272) 81 82
ELSE (273) 82
WHILE (274) 83
CONTINUE (275) 84
BREAK (276) 85
RETURN (277) 86 87
LOAD (278)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
goal (39)
    on left: 1, on right: 0
primary_expression (40)
    on left: 2 3 4 5, on right: 6
postfix_expression (41)
    on left: 6 7 8, on right: 7 8 11
argument_expression_list (42)
    on left: 9 10, on right: 8 10
unary_expression (43)
    on left: 11, on right: 12 13 14 15 28
multiplicative_expression (44)
    on left: 12 13 14 15, on right: 13 14 15 16 17 18
additive_expression (45)
    on left: 16 17 18, on right: 17 18 19 20 21 22 23
relational_expression (46)
    on left: 19 20 21 22 23, on right: 20 21 22 23 24 25 26
equality_expression (47)
    on left: 24 25 26, on right: 25 26 27
assignment_expression (48)
    on left: 27 28, on right: 9 10 28 29 30 41
expression (49)
    on left: 29 30, on right: 5 30 80 81 82 83 87
declaration (50)
    on left: 31 32 33, on right: 75 76 90
declaration_specifiers (51)
    on left: 34 35 36 37, on right: 31 33 35 37 55 56 57 91
init_declarator_list (52)
    on left: 38 39, on right: 33 39
init_declarator (53)
    on left: 40 41, on right: 38 39
storage_class_specifier (54)
    on left: 42 43, on right: 34 35
type_specifier (55)
    on left: 44 45 46, on right: 36 37
declarator (56)
    on left: 47, on right: 40 41 49 55 91
direct_declarator (57)
    on left: 48 49 50 51 52, on right: 47 50 51 52
parameter_list (58)
    on left: 53 54, on right: 50 54 63 65
parameter_declaration (59)
    on left: 55 56 57, on right: 53 54
identifier_list (60)
    on left: 58 59, on right: 51 59
abstract_declarator (61)
    on left: 60, on right: 56 61
direct_abstract_declarator (62)
    on left: 61 62 63 64 65, on right: 60 64 65
statement (63)
    on left: 66 67 68 69 70, on right: 77 78 81 82 83
compound_statement (64)
    on left: 71 72 73 74, on right: 66 91
declaration_list (65)
    on left: 75 76, on right: 73 74 76
statement_list (66)
    on left: 77 78, on right: 72 74 78
expression_statement (67)
    on left: 79 80, on right: 67
selection_statement (68)
    on left: 81 82, on right: 68
iteration_statement (69)
    on left: 83, on right: 69
jump_statement (70)
    on left: 84 85 86 87, on right: 70
translation_unit (71)
    on left: 88 89, on right: 1 89
external_declaration (72)
    on left: 90, on right: 88 89
function_definition (73)
    on left: 91, on right: 32


state 0

    0 $accept: . goal $end

    EXTERN    shift, and go to state 1
    AUTO      shift, and go to state 2
    INT       shift, and go to state 3
    VOID      shift, and go to state 4
    FUNCTION  shift, and go to state 5

    goal                     go to state 6
    declaration              go to state 7
    declaration_specifiers   go to state 8
    storage_class_specifier  go to state 9
    type_specifier           go to state 10
    translation_unit         go to state 11
    external_declaration     go to state 12
    function_definition      go to state 13


state 1

   42 storage_class_specifier: EXTERN .

    $default  reduce using rule 42 (storage_class_specifier)


state 2

   43 storage_class_specifier: AUTO .

    $default  reduce using rule 43 (storage_class_specifier)


state 3

   45 type_specifier: INT .

    $default  reduce using rule 45 (type_specifier)


state 4

   44 type_specifier: VOID .

    $default  reduce using rule 44 (type_specifier)


state 5

   46 type_specifier: FUNCTION .

    $default  reduce using rule 46 (type_specifier)


state 6

    0 $accept: goal . $end

    $end  shift, and go to state 14


state 7

   90 external_declaration: declaration .

    $default  reduce using rule 90 (external_declaration)


state 8

   31 declaration: declaration_specifiers . ';'
   33            | declaration_specifiers . init_declarator_list ';'
   91 function_definition: declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16
    ';'         shift, and go to state 17

    init_declarator_list  go to state 18
    init_declarator       go to state 19
    declarator            go to state 20
    direct_declarator     go to state 21


state 9

   34 declaration_specifiers: storage_class_specifier .
   35                       | storage_class_specifier . declaration_specifiers

    EXTERN    shift, and go to state 1
    AUTO      shift, and go to state 2
    INT       shift, and go to state 3
    VOID      shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 34 (declaration_specifiers)

    declaration_specifiers   go to state 22
    storage_class_specifier  go to state 9
    type_specifier           go to state 10


state 10

   36 declaration_specifiers: type_specifier .
   37                       | type_specifier . declaration_specifiers

    EXTERN    shift, and go to state 1
    AUTO      shift, and go to state 2
    INT       shift, and go to state 3
    VOID      shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 36 (declaration_specifiers)

    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 9
    type_specifier           go to state 10


state 11

    1 goal: translation_unit .
   89 translation_unit: translation_unit . external_declaration

    EXTERN    shift, and go to state 1
    AUTO      shift, and go to state 2
    INT       shift, and go to state 3
    VOID      shift, and go to state 4
    FUNCTION  shift, and go to state 5

    $default  reduce using rule 1 (goal)

    declaration              go to state 7
    declaration_specifiers   go to state 8
    storage_class_specifier  go to state 9
    type_specifier           go to state 10
    external_declaration     go to state 24
    function_definition      go to state 13


state 12

   88 translation_unit: external_declaration .

    $default  reduce using rule 88 (translation_unit)


state 13

   32 declaration: function_definition .

    $default  reduce using rule 32 (declaration)


state 14

    0 $accept: goal $end .

    $default  accept


state 15

   48 direct_declarator: IDENTIFIER .

    $default  reduce using rule 48 (direct_declarator)


state 16

   49 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    declarator         go to state 25
    direct_declarator  go to state 21


state 17

   31 declaration: declaration_specifiers ';' .

    $default  reduce using rule 31 (declaration)


state 18

   33 declaration: declaration_specifiers init_declarator_list . ';'
   39 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 26
    ';'  shift, and go to state 27


state 19

   38 init_declarator_list: init_declarator .

    $default  reduce using rule 38 (init_declarator_list)


state 20

   40 init_declarator: declarator .
   41                | declarator . '=' assignment_expression
   91 function_definition: declaration_specifiers declarator . compound_statement

    '='  shift, and go to state 28
    '{'  shift, and go to state 29

    $default  reduce using rule 40 (init_declarator)

    compound_statement  go to state 30


state 21

   47 declarator: direct_declarator .
   50 direct_declarator: direct_declarator . '(' parameter_list ')'
   51                  | direct_declarator . '(' identifier_list ')'
   52                  | direct_declarator . '(' ')'

    '('  shift, and go to state 31

    $default  reduce using rule 47 (declarator)


state 22

   35 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 35 (declaration_specifiers)


state 23

   37 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 37 (declaration_specifiers)


state 24

   89 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 89 (translation_unit)


state 25

   49 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 32


state 26

   39 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 16

    init_declarator    go to state 33
    declarator         go to state 34
    direct_declarator  go to state 21


state 27

   33 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 33 (declaration)


state 28

   41 init_declarator: declarator '=' . assignment_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 46


state 29

   71 compound_statement: '{' . '}'
   72                   | '{' . statement_list '}'
   73                   | '{' . declaration_list '}'
   74                   | '{' . declaration_list statement_list '}'

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    EXTERN          shift, and go to state 1
    AUTO            shift, and go to state 2
    INT             shift, and go to state 3
    VOID            shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29
    '}'             shift, and go to state 53

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    declaration                go to state 56
    declaration_specifiers     go to state 8
    storage_class_specifier    go to state 9
    type_specifier             go to state 10
    statement                  go to state 57
    compound_statement         go to state 58
    declaration_list           go to state 59
    statement_list             go to state 60
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64
    function_definition        go to state 13


state 30

   91 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 91 (function_definition)


state 31

   50 direct_declarator: direct_declarator '(' . parameter_list ')'
   51                  | direct_declarator '(' . identifier_list ')'
   52                  | direct_declarator '(' . ')'

    IDENTIFIER  shift, and go to state 65
    EXTERN      shift, and go to state 1
    AUTO        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    FUNCTION    shift, and go to state 5
    ')'         shift, and go to state 66

    declaration_specifiers   go to state 67
    storage_class_specifier  go to state 9
    type_specifier           go to state 10
    parameter_list           go to state 68
    parameter_declaration    go to state 69
    identifier_list          go to state 70


state 32

   49 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 49 (direct_declarator)


state 33

   39 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 39 (init_declarator_list)


state 34

   40 init_declarator: declarator .
   41                | declarator . '=' assignment_expression

    '='  shift, and go to state 28

    $default  reduce using rule 40 (init_declarator)


state 35

    2 primary_expression: IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


state 36

    3 primary_expression: CONSTANT .

    $default  reduce using rule 3 (primary_expression)


state 37

    4 primary_expression: STRING_LITERAL .

    $default  reduce using rule 4 (primary_expression)


state 38

    5 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 71


state 39

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


state 40

    7 postfix_expression: postfix_expression . '(' ')'
    8                   | postfix_expression . '(' argument_expression_list ')'
   11 unary_expression: postfix_expression .

    '('  shift, and go to state 72

    $default  reduce using rule 11 (unary_expression)


state 41

   12 multiplicative_expression: unary_expression .
   28 assignment_expression: unary_expression . '=' assignment_expression

    '='  shift, and go to state 73

    $default  reduce using rule 12 (multiplicative_expression)


state 42

   13 multiplicative_expression: multiplicative_expression . '*' unary_expression
   14                          | multiplicative_expression . '/' unary_expression
   15                          | multiplicative_expression . '%' unary_expression
   16 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 16 (additive_expression)


state 43

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   19 relational_expression: additive_expression .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 19 (relational_expression)


state 44

   20 relational_expression: relational_expression . '<' additive_expression
   21                      | relational_expression . '>' additive_expression
   22                      | relational_expression . LE_OP additive_expression
   23                      | relational_expression . GE_OP additive_expression
   24 equality_expression: relational_expression .

    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    '<'    shift, and go to state 81
    '>'    shift, and go to state 82

    $default  reduce using rule 24 (equality_expression)


state 45

   25 equality_expression: equality_expression . EQ_OP relational_expression
   26                    | equality_expression . NE_OP relational_expression
   27 assignment_expression: equality_expression .

    EQ_OP  shift, and go to state 83
    NE_OP  shift, and go to state 84

    $default  reduce using rule 27 (assignment_expression)


state 46

   41 init_declarator: declarator '=' assignment_expression .

    $default  reduce using rule 41 (init_declarator)


state 47

   81 selection_statement: IF . '(' expression ')' statement
   82                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 85


state 48

   83 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 86


state 49

   84 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 87


state 50

   85 jump_statement: BREAK . ';'

    ';'  shift, and go to state 88


state 51

   86 jump_statement: RETURN . ';'
   87               | RETURN . expression ';'

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38
    ';'             shift, and go to state 89

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 90


state 52

   79 expression_statement: ';' .

    $default  reduce using rule 79 (expression_statement)


state 53

   71 compound_statement: '{' '}' .

    $default  reduce using rule 71 (compound_statement)


state 54

   29 expression: assignment_expression .

    $default  reduce using rule 29 (expression)


state 55

   30 expression: expression . ',' assignment_expression
   80 expression_statement: expression . ';'

    ','  shift, and go to state 91
    ';'  shift, and go to state 92


state 56

   75 declaration_list: declaration .

    $default  reduce using rule 75 (declaration_list)


state 57

   77 statement_list: statement .

    $default  reduce using rule 77 (statement_list)


state 58

   66 statement: compound_statement .

    $default  reduce using rule 66 (statement)


state 59

   73 compound_statement: '{' declaration_list . '}'
   74                   | '{' declaration_list . statement_list '}'
   76 declaration_list: declaration_list . declaration

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    EXTERN          shift, and go to state 1
    AUTO            shift, and go to state 2
    INT             shift, and go to state 3
    VOID            shift, and go to state 4
    FUNCTION        shift, and go to state 5
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29
    '}'             shift, and go to state 93

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    declaration                go to state 94
    declaration_specifiers     go to state 8
    storage_class_specifier    go to state 9
    type_specifier             go to state 10
    statement                  go to state 57
    compound_statement         go to state 58
    statement_list             go to state 95
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64
    function_definition        go to state 13


state 60

   72 compound_statement: '{' statement_list . '}'
   78 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29
    '}'             shift, and go to state 96

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    statement                  go to state 97
    compound_statement         go to state 58
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64


state 61

   67 statement: expression_statement .

    $default  reduce using rule 67 (statement)


state 62

   68 statement: selection_statement .

    $default  reduce using rule 68 (statement)


state 63

   69 statement: iteration_statement .

    $default  reduce using rule 69 (statement)


state 64

   70 statement: jump_statement .

    $default  reduce using rule 70 (statement)


state 65

   58 identifier_list: IDENTIFIER .

    $default  reduce using rule 58 (identifier_list)


state 66

   52 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 52 (direct_declarator)


state 67

   55 parameter_declaration: declaration_specifiers . declarator
   56                      | declaration_specifiers . abstract_declarator
   57                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 15
    '('         shift, and go to state 98

    $default  reduce using rule 57 (parameter_declaration)

    declarator                  go to state 99
    direct_declarator           go to state 21
    abstract_declarator         go to state 100
    direct_abstract_declarator  go to state 101


state 68

   50 direct_declarator: direct_declarator '(' parameter_list . ')'
   54 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


state 69

   53 parameter_list: parameter_declaration .

    $default  reduce using rule 53 (parameter_list)


state 70

   51 direct_declarator: direct_declarator '(' identifier_list . ')'
   59 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 104
    ','  shift, and go to state 105


state 71

    5 primary_expression: '(' expression . ')'
   30 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 106
    ','  shift, and go to state 91


state 72

    7 postfix_expression: postfix_expression '(' . ')'
    8                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38
    ')'             shift, and go to state 107

    primary_expression         go to state 39
    postfix_expression         go to state 40
    argument_expression_list   go to state 108
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 109


state 73

   28 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 110


state 74

   13 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression  go to state 39
    postfix_expression  go to state 40
    unary_expression    go to state 111


state 75

   14 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression  go to state 39
    postfix_expression  go to state 40
    unary_expression    go to state 112


state 76

   15 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression  go to state 39
    postfix_expression  go to state 40
    unary_expression    go to state 113


state 77

   17 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 115


state 78

   18 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 116


state 79

   22 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 42
    additive_expression        go to state 117


state 80

   23 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 42
    additive_expression        go to state 118


state 81

   20 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 42
    additive_expression        go to state 119


state 82

   21 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 42
    additive_expression        go to state 120


state 83

   25 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 121


state 84

   26 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 114
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 122


state 85

   81 selection_statement: IF '(' . expression ')' statement
   82                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 123


state 86

   83 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 124


state 87

   84 jump_statement: CONTINUE ';' .

    $default  reduce using rule 84 (jump_statement)


state 88

   85 jump_statement: BREAK ';' .

    $default  reduce using rule 85 (jump_statement)


state 89

   86 jump_statement: RETURN ';' .

    $default  reduce using rule 86 (jump_statement)


state 90

   30 expression: expression . ',' assignment_expression
   87 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 91
    ';'  shift, and go to state 125


state 91

   30 expression: expression ',' . assignment_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 126


state 92

   80 expression_statement: expression ';' .

    $default  reduce using rule 80 (expression_statement)


state 93

   73 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 73 (compound_statement)


state 94

   76 declaration_list: declaration_list declaration .

    $default  reduce using rule 76 (declaration_list)


state 95

   74 compound_statement: '{' declaration_list statement_list . '}'
   78 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29
    '}'             shift, and go to state 127

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    statement                  go to state 97
    compound_statement         go to state 58
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64


state 96

   72 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 72 (compound_statement)


state 97

   78 statement_list: statement_list statement .

    $default  reduce using rule 78 (statement_list)


state 98

   49 direct_declarator: '(' . declarator ')'
   61 direct_abstract_declarator: '(' . abstract_declarator ')'
   62                           | '(' . ')'
   63                           | '(' . parameter_list ')'

    IDENTIFIER  shift, and go to state 15
    EXTERN      shift, and go to state 1
    AUTO        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    FUNCTION    shift, and go to state 5
    '('         shift, and go to state 98
    ')'         shift, and go to state 128

    declaration_specifiers      go to state 67
    storage_class_specifier     go to state 9
    type_specifier              go to state 10
    declarator                  go to state 25
    direct_declarator           go to state 21
    parameter_list              go to state 129
    parameter_declaration       go to state 69
    abstract_declarator         go to state 130
    direct_abstract_declarator  go to state 101


state 99

   55 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 55 (parameter_declaration)


state 100

   56 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 56 (parameter_declaration)


state 101

   60 abstract_declarator: direct_abstract_declarator .
   64 direct_abstract_declarator: direct_abstract_declarator . '(' ')'
   65                           | direct_abstract_declarator . '(' parameter_list ')'

    '('  shift, and go to state 131

    $default  reduce using rule 60 (abstract_declarator)


state 102

   50 direct_declarator: direct_declarator '(' parameter_list ')' .

    $default  reduce using rule 50 (direct_declarator)


state 103

   54 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN    shift, and go to state 1
    AUTO      shift, and go to state 2
    INT       shift, and go to state 3
    VOID      shift, and go to state 4
    FUNCTION  shift, and go to state 5

    declaration_specifiers   go to state 67
    storage_class_specifier  go to state 9
    type_specifier           go to state 10
    parameter_declaration    go to state 132


state 104

   51 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 51 (direct_declarator)


state 105

   59 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 133


state 106

    5 primary_expression: '(' expression ')' .

    $default  reduce using rule 5 (primary_expression)


state 107

    7 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 7 (postfix_expression)


state 108

    8 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   10 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 134
    ','  shift, and go to state 135


state 109

    9 argument_expression_list: assignment_expression .

    $default  reduce using rule 9 (argument_expression_list)


state 110

   28 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 28 (assignment_expression)


state 111

   13 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 13 (multiplicative_expression)


state 112

   14 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 14 (multiplicative_expression)


state 113

   15 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 15 (multiplicative_expression)


state 114

   12 multiplicative_expression: unary_expression .

    $default  reduce using rule 12 (multiplicative_expression)


state 115

   13 multiplicative_expression: multiplicative_expression . '*' unary_expression
   14                          | multiplicative_expression . '/' unary_expression
   15                          | multiplicative_expression . '%' unary_expression
   17 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 17 (additive_expression)


state 116

   13 multiplicative_expression: multiplicative_expression . '*' unary_expression
   14                          | multiplicative_expression . '/' unary_expression
   15                          | multiplicative_expression . '%' unary_expression
   18 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 18 (additive_expression)


state 117

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   22 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 22 (relational_expression)


state 118

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   23 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 23 (relational_expression)


state 119

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   20 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 20 (relational_expression)


state 120

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   21 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 21 (relational_expression)


state 121

   20 relational_expression: relational_expression . '<' additive_expression
   21                      | relational_expression . '>' additive_expression
   22                      | relational_expression . LE_OP additive_expression
   23                      | relational_expression . GE_OP additive_expression
   25 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    '<'    shift, and go to state 81
    '>'    shift, and go to state 82

    $default  reduce using rule 25 (equality_expression)


state 122

   20 relational_expression: relational_expression . '<' additive_expression
   21                      | relational_expression . '>' additive_expression
   22                      | relational_expression . LE_OP additive_expression
   23                      | relational_expression . GE_OP additive_expression
   26 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 79
    GE_OP  shift, and go to state 80
    '<'    shift, and go to state 81
    '>'    shift, and go to state 82

    $default  reduce using rule 26 (equality_expression)


state 123

   30 expression: expression . ',' assignment_expression
   81 selection_statement: IF '(' expression . ')' statement
   82                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 136
    ','  shift, and go to state 91


state 124

   30 expression: expression . ',' assignment_expression
   83 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 137
    ','  shift, and go to state 91


state 125

   87 jump_statement: RETURN expression ';' .

    $default  reduce using rule 87 (jump_statement)


state 126

   30 expression: expression ',' assignment_expression .

    $default  reduce using rule 30 (expression)


state 127

   74 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 74 (compound_statement)


state 128

   62 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 62 (direct_abstract_declarator)


state 129

   54 parameter_list: parameter_list . ',' parameter_declaration
   63 direct_abstract_declarator: '(' parameter_list . ')'

    ')'  shift, and go to state 138
    ','  shift, and go to state 103


state 130

   61 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 139


state 131

   64 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
   65                           | direct_abstract_declarator '(' . parameter_list ')'

    EXTERN    shift, and go to state 1
    AUTO      shift, and go to state 2
    INT       shift, and go to state 3
    VOID      shift, and go to state 4
    FUNCTION  shift, and go to state 5
    ')'       shift, and go to state 140

    declaration_specifiers   go to state 67
    storage_class_specifier  go to state 9
    type_specifier           go to state 10
    parameter_list           go to state 141
    parameter_declaration    go to state 69


state 132

   54 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 54 (parameter_list)


state 133

   59 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 59 (identifier_list)


state 134

    8 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 8 (postfix_expression)


state 135

   10 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    '('             shift, and go to state 38

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 142


state 136

   81 selection_statement: IF '(' expression ')' . statement
   82                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    statement                  go to state 143
    compound_statement         go to state 58
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64


state 137

   83 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    statement                  go to state 144
    compound_statement         go to state 58
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64


state 138

   63 direct_abstract_declarator: '(' parameter_list ')' .

    $default  reduce using rule 63 (direct_abstract_declarator)


state 139

   61 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 61 (direct_abstract_declarator)


state 140

   64 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 64 (direct_abstract_declarator)


state 141

   54 parameter_list: parameter_list . ',' parameter_declaration
   65 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list . ')'

    ')'  shift, and go to state 145
    ','  shift, and go to state 103


state 142

   10 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 10 (argument_expression_list)


state 143

   81 selection_statement: IF '(' expression ')' statement .
   82                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 146

    ELSE      [reduce using rule 81 (selection_statement)]
    $default  reduce using rule 81 (selection_statement)


state 144

   83 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 83 (iteration_statement)


state 145

   65 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' .

    $default  reduce using rule 65 (direct_abstract_declarator)


state 146

   82 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 35
    CONSTANT        shift, and go to state 36
    STRING_LITERAL  shift, and go to state 37
    IF              shift, and go to state 47
    WHILE           shift, and go to state 48
    CONTINUE        shift, and go to state 49
    BREAK           shift, and go to state 50
    RETURN          shift, and go to state 51
    '('             shift, and go to state 38
    ';'             shift, and go to state 52
    '{'             shift, and go to state 29

    primary_expression         go to state 39
    postfix_expression         go to state 40
    unary_expression           go to state 41
    multiplicative_expression  go to state 42
    additive_expression        go to state 43
    relational_expression      go to state 44
    equality_expression        go to state 45
    assignment_expression      go to state 54
    expression                 go to state 55
    statement                  go to state 147
    compound_statement         go to state 58
    expression_statement       go to state 61
    selection_statement        go to state 62
    iteration_statement        go to state 63
    jump_statement             go to state 64


state 147

   82 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 82 (selection_statement)
