Terminals unused in grammar

   APPLY
   LEAF


State 14 conflicts: 1 shift/reduce
State 38 conflicts: 2 reduce/reduce
State 150 conflicts: 1 shift/reduce


Grammar

    0 $accept: goal $end

    1 goal: translation_unit

    2 primary_expression: IDENTIFIER
    3                   | CONSTANT
    4                   | STRING_LITERAL
    5                   | '(' expression ')'

    6 postfix_expression: primary_expression
    7                   | postfix_expression '(' ')'
    8                   | postfix_expression '(' argument_expression_list ')'

    9 argument_expression_list: assignment_expression
   10                         | argument_expression_list ',' assignment_expression

   11 unary_expression: postfix_expression

   12 multiplicative_expression: unary_expression
   13                          | multiplicative_expression '*' unary_expression
   14                          | multiplicative_expression '/' unary_expression
   15                          | multiplicative_expression '%' unary_expression

   16 additive_expression: multiplicative_expression
   17                    | additive_expression '+' multiplicative_expression
   18                    | additive_expression '-' multiplicative_expression

   19 relational_expression: additive_expression
   20                      | relational_expression '<' additive_expression
   21                      | relational_expression '>' additive_expression
   22                      | relational_expression LE_OP additive_expression
   23                      | relational_expression GE_OP additive_expression

   24 equality_expression: relational_expression
   25                    | equality_expression EQ_OP relational_expression
   26                    | equality_expression NE_OP relational_expression

   27 assignment_expression: equality_expression
   28                      | unary_expression '=' assignment_expression

   29 expression: assignment_expression
   30           | expression ',' assignment_expression

   31 declaration: declaration_specifiers ';'
   32            | function_definition
   33            | declaration_specifiers init_declarator_list ';'

   34 declaration_specifiers: storage_class_specifier
   35                       | storage_class_specifier declaration_specifiers
   36                       | type_specifier
   37                       | type_specifier declaration_specifiers

   38 init_declarator_list: init_declarator
   39                     | init_declarator_list ',' init_declarator

   40 init_declarator: declarator
   41                | declarator '=' assignment_expression

   42 storage_class_specifier: EXTERN
   43                        | AUTO

   44 type_specifier: VOID
   45               | INT
   46               | FUNCTION

   47 declarator: direct_declarator

   48 direct_declarator: IDENTIFIER
   49                  | '(' declarator ')'
   50                  | direct_declarator '(' parameter_list ')'
   51                  | direct_declarator '(' identifier_list ')'
   52                  | direct_declarator '(' ')'

   53 parameter_list: parameter_declaration
   54               | parameter_list ',' parameter_declaration

   55 parameter_declaration: declaration_specifiers declarator
   56                      | declaration_specifiers abstract_declarator
   57                      | declaration_specifiers

   58 identifier_list: IDENTIFIER
   59                | identifier_list ',' IDENTIFIER

   60 abstract_declarator: direct_abstract_declarator

   61 direct_abstract_declarator: '(' abstract_declarator ')'
   62                           | '(' ')'
   63                           | '(' parameter_list ')'
   64                           | direct_abstract_declarator '(' ')'
   65                           | direct_abstract_declarator '(' parameter_list ')'

   66 statement: compound_statement
   67          | expression_statement
   68          | selection_statement
   69          | iteration_statement
   70          | jump_statement

   71 compound_statement: '{' '}'
   72                   | '{' statement_list '}'
   73                   | '{' declaration_list '}'
   74                   | '{' declaration_list statement_list '}'

   75 declaration_list: declaration
   76                 | declaration_list declaration

   77 statement_list: statement
   78               | statement_list statement

   79 expression_statement: ';'
   80                     | expression ';'

   81 selection_statement: IF '(' expression ')' statement
   82                    | IF '(' expression ')' statement ELSE statement

   83 iteration_statement: WHILE '(' expression ')' statement

   84 jump_statement: CONTINUE ';'
   85               | BREAK ';'
   86               | RETURN ';'
   87               | RETURN expression ';'

   88 translation_unit: external_declaration
   89                 | translation_unit external_declaration

   90 external_declaration: declaration

   91 function_definition: declaration_specifiers declarator declaration_list compound_statement
   92                    | declaration_specifiers declarator compound_statement
   93                    | declarator declaration_list compound_statement
   94                    | declarator compound_statement


Terminals, with rules where they appear

$end (0) 0
'%' (37) 15
'(' (40) 5 7 8 49 50 51 52 61 62 63 64 65 81 82 83
')' (41) 5 7 8 49 50 51 52 61 62 63 64 65 81 82 83
'*' (42) 13
'+' (43) 17
',' (44) 10 30 39 54 59
'-' (45) 18
'/' (47) 14
';' (59) 31 33 79 80 84 85 86 87
'<' (60) 20
'=' (61) 28 41
'>' (62) 21
'{' (123) 71 72 73 74
'}' (125) 71 72 73 74
error (256)
IDENTIFIER (258) 2 48 58 59
CONSTANT (259) 3
STRING_LITERAL (260) 4
LE_OP (261) 22
GE_OP (262) 23
EQ_OP (263) 25
NE_OP (264) 26
EXTERN (265) 42
AUTO (266) 43
INT (267) 45
VOID (268) 44
FUNCTION (269) 46
APPLY (270)
LEAF (271)
IF (272) 81 82
ELSE (273) 82
WHILE (274) 83
CONTINUE (275) 84
BREAK (276) 85
RETURN (277) 86 87


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
goal (38)
    on left: 1, on right: 0
primary_expression (39)
    on left: 2 3 4 5, on right: 6
postfix_expression (40)
    on left: 6 7 8, on right: 7 8 11
argument_expression_list (41)
    on left: 9 10, on right: 8 10
unary_expression (42)
    on left: 11, on right: 12 13 14 15 28
multiplicative_expression (43)
    on left: 12 13 14 15, on right: 13 14 15 16 17 18
additive_expression (44)
    on left: 16 17 18, on right: 17 18 19 20 21 22 23
relational_expression (45)
    on left: 19 20 21 22 23, on right: 20 21 22 23 24 25 26
equality_expression (46)
    on left: 24 25 26, on right: 25 26 27
assignment_expression (47)
    on left: 27 28, on right: 9 10 28 29 30 41
expression (48)
    on left: 29 30, on right: 5 30 80 81 82 83 87
declaration (49)
    on left: 31 32 33, on right: 75 76 90
declaration_specifiers (50)
    on left: 34 35 36 37, on right: 31 33 35 37 55 56 57 91 92
init_declarator_list (51)
    on left: 38 39, on right: 33 39
init_declarator (52)
    on left: 40 41, on right: 38 39
storage_class_specifier (53)
    on left: 42 43, on right: 34 35
type_specifier (54)
    on left: 44 45 46, on right: 36 37
declarator (55)
    on left: 47, on right: 40 41 49 55 91 92 93 94
direct_declarator (56)
    on left: 48 49 50 51 52, on right: 47 50 51 52
parameter_list (57)
    on left: 53 54, on right: 50 54 63 65
parameter_declaration (58)
    on left: 55 56 57, on right: 53 54
identifier_list (59)
    on left: 58 59, on right: 51 59
abstract_declarator (60)
    on left: 60, on right: 56 61
direct_abstract_declarator (61)
    on left: 61 62 63 64 65, on right: 60 64 65
statement (62)
    on left: 66 67 68 69 70, on right: 77 78 81 82 83
compound_statement (63)
    on left: 71 72 73 74, on right: 66 91 92 93 94
declaration_list (64)
    on left: 75 76, on right: 73 74 76 91 93
statement_list (65)
    on left: 77 78, on right: 72 74 78
expression_statement (66)
    on left: 79 80, on right: 67
selection_statement (67)
    on left: 81 82, on right: 68
iteration_statement (68)
    on left: 83, on right: 69
jump_statement (69)
    on left: 84 85 86 87, on right: 70
translation_unit (70)
    on left: 88 89, on right: 1 89
external_declaration (71)
    on left: 90, on right: 88 89
function_definition (72)
    on left: 91 92 93 94, on right: 32


State 0

    0 $accept: . goal $end

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 7

    goal                     go to state 8
    declaration              go to state 9
    declaration_specifiers   go to state 10
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    declarator               go to state 13
    direct_declarator        go to state 14
    translation_unit         go to state 15
    external_declaration     go to state 16
    function_definition      go to state 17


State 1

   48 direct_declarator: IDENTIFIER .

    $default  reduce using rule 48 (direct_declarator)


State 2

   42 storage_class_specifier: EXTERN .

    $default  reduce using rule 42 (storage_class_specifier)


State 3

   43 storage_class_specifier: AUTO .

    $default  reduce using rule 43 (storage_class_specifier)


State 4

   45 type_specifier: INT .

    $default  reduce using rule 45 (type_specifier)


State 5

   44 type_specifier: VOID .

    $default  reduce using rule 44 (type_specifier)


State 6

   46 type_specifier: FUNCTION .

    $default  reduce using rule 46 (type_specifier)


State 7

   49 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 7

    declarator         go to state 18
    direct_declarator  go to state 14


State 8

    0 $accept: goal . $end

    $end  shift, and go to state 19


State 9

   90 external_declaration: declaration .

    $default  reduce using rule 90 (external_declaration)


State 10

   31 declaration: declaration_specifiers . ';'
   33            | declaration_specifiers . init_declarator_list ';'
   91 function_definition: declaration_specifiers . declarator declaration_list compound_statement
   92                    | declaration_specifiers . declarator compound_statement

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 7
    ';'         shift, and go to state 20

    init_declarator_list  go to state 21
    init_declarator       go to state 22
    declarator            go to state 23
    direct_declarator     go to state 14


State 11

   34 declaration_specifiers: storage_class_specifier .
   35                       | storage_class_specifier . declaration_specifiers

    EXTERN    shift, and go to state 2
    AUTO      shift, and go to state 3
    INT       shift, and go to state 4
    VOID      shift, and go to state 5
    FUNCTION  shift, and go to state 6

    $default  reduce using rule 34 (declaration_specifiers)

    declaration_specifiers   go to state 24
    storage_class_specifier  go to state 11
    type_specifier           go to state 12


State 12

   36 declaration_specifiers: type_specifier .
   37                       | type_specifier . declaration_specifiers

    EXTERN    shift, and go to state 2
    AUTO      shift, and go to state 3
    INT       shift, and go to state 4
    VOID      shift, and go to state 5
    FUNCTION  shift, and go to state 6

    $default  reduce using rule 36 (declaration_specifiers)

    declaration_specifiers   go to state 25
    storage_class_specifier  go to state 11
    type_specifier           go to state 12


State 13

   93 function_definition: declarator . declaration_list compound_statement
   94                    | declarator . compound_statement

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 7
    '{'         shift, and go to state 26

    declaration              go to state 27
    declaration_specifiers   go to state 10
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    declarator               go to state 13
    direct_declarator        go to state 14
    compound_statement       go to state 28
    declaration_list         go to state 29
    function_definition      go to state 17


State 14

   47 declarator: direct_declarator .
   50 direct_declarator: direct_declarator . '(' parameter_list ')'
   51                  | direct_declarator . '(' identifier_list ')'
   52                  | direct_declarator . '(' ')'

    '('  shift, and go to state 30

    '('       [reduce using rule 47 (declarator)]
    $default  reduce using rule 47 (declarator)


State 15

    1 goal: translation_unit .
   89 translation_unit: translation_unit . external_declaration

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 7

    $default  reduce using rule 1 (goal)

    declaration              go to state 9
    declaration_specifiers   go to state 10
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    declarator               go to state 13
    direct_declarator        go to state 14
    external_declaration     go to state 31
    function_definition      go to state 17


State 16

   88 translation_unit: external_declaration .

    $default  reduce using rule 88 (translation_unit)


State 17

   32 declaration: function_definition .

    $default  reduce using rule 32 (declaration)


State 18

   49 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 32


State 19

    0 $accept: goal $end .

    $default  accept


State 20

   31 declaration: declaration_specifiers ';' .

    $default  reduce using rule 31 (declaration)


State 21

   33 declaration: declaration_specifiers init_declarator_list . ';'
   39 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 33
    ';'  shift, and go to state 34


State 22

   38 init_declarator_list: init_declarator .

    $default  reduce using rule 38 (init_declarator_list)


State 23

   40 init_declarator: declarator .
   41                | declarator . '=' assignment_expression
   91 function_definition: declaration_specifiers declarator . declaration_list compound_statement
   92                    | declaration_specifiers declarator . compound_statement

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 7
    '='         shift, and go to state 35
    '{'         shift, and go to state 26

    $default  reduce using rule 40 (init_declarator)

    declaration              go to state 27
    declaration_specifiers   go to state 10
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    declarator               go to state 13
    direct_declarator        go to state 14
    compound_statement       go to state 36
    declaration_list         go to state 37
    function_definition      go to state 17


State 24

   35 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 35 (declaration_specifiers)


State 25

   37 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 37 (declaration_specifiers)


State 26

   71 compound_statement: '{' . '}'
   72                   | '{' . statement_list '}'
   73                   | '{' . declaration_list '}'
   74                   | '{' . declaration_list statement_list '}'

    IDENTIFIER      shift, and go to state 38
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    EXTERN          shift, and go to state 2
    AUTO            shift, and go to state 3
    INT             shift, and go to state 4
    VOID            shift, and go to state 5
    FUNCTION        shift, and go to state 6
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 46
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26
    '}'             shift, and go to state 48

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    declaration                go to state 27
    declaration_specifiers     go to state 10
    storage_class_specifier    go to state 11
    type_specifier             go to state 12
    declarator                 go to state 13
    direct_declarator          go to state 14
    statement                  go to state 58
    compound_statement         go to state 59
    declaration_list           go to state 60
    statement_list             go to state 61
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65
    function_definition        go to state 17


State 27

   75 declaration_list: declaration .

    $default  reduce using rule 75 (declaration_list)


State 28

   94 function_definition: declarator compound_statement .

    $default  reduce using rule 94 (function_definition)


State 29

   76 declaration_list: declaration_list . declaration
   93 function_definition: declarator declaration_list . compound_statement

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 7
    '{'         shift, and go to state 26

    declaration              go to state 66
    declaration_specifiers   go to state 10
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    declarator               go to state 13
    direct_declarator        go to state 14
    compound_statement       go to state 67
    function_definition      go to state 17


State 30

   50 direct_declarator: direct_declarator '(' . parameter_list ')'
   51                  | direct_declarator '(' . identifier_list ')'
   52                  | direct_declarator '(' . ')'

    IDENTIFIER  shift, and go to state 68
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    ')'         shift, and go to state 69

    declaration_specifiers   go to state 70
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    parameter_list           go to state 71
    parameter_declaration    go to state 72
    identifier_list          go to state 73


State 31

   89 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 89 (translation_unit)


State 32

   49 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 49 (direct_declarator)


State 33

   39 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 7

    init_declarator    go to state 74
    declarator         go to state 75
    direct_declarator  go to state 14


State 34

   33 declaration: declaration_specifiers init_declarator_list ';' .

    $default  reduce using rule 33 (declaration)


State 35

   41 init_declarator: declarator '=' . assignment_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 78


State 36

   92 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 92 (function_definition)


State 37

   76 declaration_list: declaration_list . declaration
   91 function_definition: declaration_specifiers declarator declaration_list . compound_statement

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 7
    '{'         shift, and go to state 26

    declaration              go to state 66
    declaration_specifiers   go to state 10
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    declarator               go to state 13
    direct_declarator        go to state 14
    compound_statement       go to state 79
    function_definition      go to state 17


State 38

    2 primary_expression: IDENTIFIER .
   48 direct_declarator: IDENTIFIER .

    IDENTIFIER  reduce using rule 48 (direct_declarator)
    EXTERN      reduce using rule 48 (direct_declarator)
    AUTO        reduce using rule 48 (direct_declarator)
    INT         reduce using rule 48 (direct_declarator)
    VOID        reduce using rule 48 (direct_declarator)
    FUNCTION    reduce using rule 48 (direct_declarator)
    '('         reduce using rule 2 (primary_expression)
    '('         [reduce using rule 48 (direct_declarator)]
    ')'         reduce using rule 2 (primary_expression)
    ')'         [reduce using rule 48 (direct_declarator)]
    '{'         reduce using rule 48 (direct_declarator)
    $default    reduce using rule 2 (primary_expression)


State 39

    3 primary_expression: CONSTANT .

    $default  reduce using rule 3 (primary_expression)


State 40

    4 primary_expression: STRING_LITERAL .

    $default  reduce using rule 4 (primary_expression)


State 41

   81 selection_statement: IF . '(' expression ')' statement
   82                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 80


State 42

   83 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 81


State 43

   84 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 82


State 44

   85 jump_statement: BREAK . ';'

    ';'  shift, and go to state 83


State 45

   86 jump_statement: RETURN . ';'
   87               | RETURN . expression ';'

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77
    ';'             shift, and go to state 84

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 85


State 46

    5 primary_expression: '(' . expression ')'
   49 direct_declarator: '(' . declarator ')'

    IDENTIFIER      shift, and go to state 38
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 46

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 86
    declarator                 go to state 18
    direct_declarator          go to state 14


State 47

   79 expression_statement: ';' .

    $default  reduce using rule 79 (expression_statement)


State 48

   71 compound_statement: '{' '}' .

    $default  reduce using rule 71 (compound_statement)


State 49

    6 postfix_expression: primary_expression .

    $default  reduce using rule 6 (postfix_expression)


State 50

    7 postfix_expression: postfix_expression . '(' ')'
    8                   | postfix_expression . '(' argument_expression_list ')'
   11 unary_expression: postfix_expression .

    '('  shift, and go to state 87

    $default  reduce using rule 11 (unary_expression)


State 51

   12 multiplicative_expression: unary_expression .
   28 assignment_expression: unary_expression . '=' assignment_expression

    '='  shift, and go to state 88

    $default  reduce using rule 12 (multiplicative_expression)


State 52

   13 multiplicative_expression: multiplicative_expression . '*' unary_expression
   14                          | multiplicative_expression . '/' unary_expression
   15                          | multiplicative_expression . '%' unary_expression
   16 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 16 (additive_expression)


State 53

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   19 relational_expression: additive_expression .

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 19 (relational_expression)


State 54

   20 relational_expression: relational_expression . '<' additive_expression
   21                      | relational_expression . '>' additive_expression
   22                      | relational_expression . LE_OP additive_expression
   23                      | relational_expression . GE_OP additive_expression
   24 equality_expression: relational_expression .

    LE_OP  shift, and go to state 94
    GE_OP  shift, and go to state 95
    '<'    shift, and go to state 96
    '>'    shift, and go to state 97

    $default  reduce using rule 24 (equality_expression)


State 55

   25 equality_expression: equality_expression . EQ_OP relational_expression
   26                    | equality_expression . NE_OP relational_expression
   27 assignment_expression: equality_expression .

    EQ_OP  shift, and go to state 98
    NE_OP  shift, and go to state 99

    $default  reduce using rule 27 (assignment_expression)


State 56

   29 expression: assignment_expression .

    $default  reduce using rule 29 (expression)


State 57

   30 expression: expression . ',' assignment_expression
   80 expression_statement: expression . ';'

    ','  shift, and go to state 100
    ';'  shift, and go to state 101


State 58

   77 statement_list: statement .

    $default  reduce using rule 77 (statement_list)


State 59

   66 statement: compound_statement .

    $default  reduce using rule 66 (statement)


State 60

   73 compound_statement: '{' declaration_list . '}'
   74                   | '{' declaration_list . statement_list '}'
   76 declaration_list: declaration_list . declaration

    IDENTIFIER      shift, and go to state 38
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    EXTERN          shift, and go to state 2
    AUTO            shift, and go to state 3
    INT             shift, and go to state 4
    VOID            shift, and go to state 5
    FUNCTION        shift, and go to state 6
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 46
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26
    '}'             shift, and go to state 102

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    declaration                go to state 66
    declaration_specifiers     go to state 10
    storage_class_specifier    go to state 11
    type_specifier             go to state 12
    declarator                 go to state 13
    direct_declarator          go to state 14
    statement                  go to state 58
    compound_statement         go to state 59
    statement_list             go to state 103
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65
    function_definition        go to state 17


State 61

   72 compound_statement: '{' statement_list . '}'
   78 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 77
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26
    '}'             shift, and go to state 104

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    statement                  go to state 105
    compound_statement         go to state 59
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65


State 62

   67 statement: expression_statement .

    $default  reduce using rule 67 (statement)


State 63

   68 statement: selection_statement .

    $default  reduce using rule 68 (statement)


State 64

   69 statement: iteration_statement .

    $default  reduce using rule 69 (statement)


State 65

   70 statement: jump_statement .

    $default  reduce using rule 70 (statement)


State 66

   76 declaration_list: declaration_list declaration .

    $default  reduce using rule 76 (declaration_list)


State 67

   93 function_definition: declarator declaration_list compound_statement .

    $default  reduce using rule 93 (function_definition)


State 68

   58 identifier_list: IDENTIFIER .

    $default  reduce using rule 58 (identifier_list)


State 69

   52 direct_declarator: direct_declarator '(' ')' .

    $default  reduce using rule 52 (direct_declarator)


State 70

   55 parameter_declaration: declaration_specifiers . declarator
   56                      | declaration_specifiers . abstract_declarator
   57                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 106

    $default  reduce using rule 57 (parameter_declaration)

    declarator                  go to state 107
    direct_declarator           go to state 14
    abstract_declarator         go to state 108
    direct_abstract_declarator  go to state 109


State 71

   50 direct_declarator: direct_declarator '(' parameter_list . ')'
   54 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


State 72

   53 parameter_list: parameter_declaration .

    $default  reduce using rule 53 (parameter_list)


State 73

   51 direct_declarator: direct_declarator '(' identifier_list . ')'
   59 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 112
    ','  shift, and go to state 113


State 74

   39 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 39 (init_declarator_list)


State 75

   40 init_declarator: declarator .
   41                | declarator . '=' assignment_expression

    '='  shift, and go to state 35

    $default  reduce using rule 40 (init_declarator)


State 76

    2 primary_expression: IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


State 77

    5 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 86


State 78

   41 init_declarator: declarator '=' assignment_expression .

    $default  reduce using rule 41 (init_declarator)


State 79

   91 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 91 (function_definition)


State 80

   81 selection_statement: IF '(' . expression ')' statement
   82                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 114


State 81

   83 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 115


State 82

   84 jump_statement: CONTINUE ';' .

    $default  reduce using rule 84 (jump_statement)


State 83

   85 jump_statement: BREAK ';' .

    $default  reduce using rule 85 (jump_statement)


State 84

   86 jump_statement: RETURN ';' .

    $default  reduce using rule 86 (jump_statement)


State 85

   30 expression: expression . ',' assignment_expression
   87 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 100
    ';'  shift, and go to state 116


State 86

    5 primary_expression: '(' expression . ')'
   30 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 117
    ','  shift, and go to state 100


State 87

    7 postfix_expression: postfix_expression '(' . ')'
    8                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77
    ')'             shift, and go to state 118

    primary_expression         go to state 49
    postfix_expression         go to state 50
    argument_expression_list   go to state 119
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 120


State 88

   28 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 121


State 89

   13 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression  go to state 49
    postfix_expression  go to state 50
    unary_expression    go to state 122


State 90

   14 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression  go to state 49
    postfix_expression  go to state 50
    unary_expression    go to state 123


State 91

   15 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression  go to state 49
    postfix_expression  go to state 50
    unary_expression    go to state 124


State 92

   17 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 126


State 93

   18 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 127


State 94

   22 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 52
    additive_expression        go to state 128


State 95

   23 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 52
    additive_expression        go to state 129


State 96

   20 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 52
    additive_expression        go to state 130


State 97

   21 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 52
    additive_expression        go to state 131


State 98

   25 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 132


State 99

   26 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 125
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 133


State 100

   30 expression: expression ',' . assignment_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 134


State 101

   80 expression_statement: expression ';' .

    $default  reduce using rule 80 (expression_statement)


State 102

   73 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 73 (compound_statement)


State 103

   74 compound_statement: '{' declaration_list statement_list . '}'
   78 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 77
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26
    '}'             shift, and go to state 135

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    statement                  go to state 105
    compound_statement         go to state 59
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65


State 104

   72 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 72 (compound_statement)


State 105

   78 statement_list: statement_list statement .

    $default  reduce using rule 78 (statement_list)


State 106

   49 direct_declarator: '(' . declarator ')'
   61 direct_abstract_declarator: '(' . abstract_declarator ')'
   62                           | '(' . ')'
   63                           | '(' . parameter_list ')'

    IDENTIFIER  shift, and go to state 1
    EXTERN      shift, and go to state 2
    AUTO        shift, and go to state 3
    INT         shift, and go to state 4
    VOID        shift, and go to state 5
    FUNCTION    shift, and go to state 6
    '('         shift, and go to state 106
    ')'         shift, and go to state 136

    declaration_specifiers      go to state 70
    storage_class_specifier     go to state 11
    type_specifier              go to state 12
    declarator                  go to state 18
    direct_declarator           go to state 14
    parameter_list              go to state 137
    parameter_declaration       go to state 72
    abstract_declarator         go to state 138
    direct_abstract_declarator  go to state 109


State 107

   55 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 55 (parameter_declaration)


State 108

   56 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 56 (parameter_declaration)


State 109

   60 abstract_declarator: direct_abstract_declarator .
   64 direct_abstract_declarator: direct_abstract_declarator . '(' ')'
   65                           | direct_abstract_declarator . '(' parameter_list ')'

    '('  shift, and go to state 139

    $default  reduce using rule 60 (abstract_declarator)


State 110

   50 direct_declarator: direct_declarator '(' parameter_list ')' .

    $default  reduce using rule 50 (direct_declarator)


State 111

   54 parameter_list: parameter_list ',' . parameter_declaration

    EXTERN    shift, and go to state 2
    AUTO      shift, and go to state 3
    INT       shift, and go to state 4
    VOID      shift, and go to state 5
    FUNCTION  shift, and go to state 6

    declaration_specifiers   go to state 70
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    parameter_declaration    go to state 140


State 112

   51 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 51 (direct_declarator)


State 113

   59 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 141


State 114

   30 expression: expression . ',' assignment_expression
   81 selection_statement: IF '(' expression . ')' statement
   82                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 142
    ','  shift, and go to state 100


State 115

   30 expression: expression . ',' assignment_expression
   83 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 143
    ','  shift, and go to state 100


State 116

   87 jump_statement: RETURN expression ';' .

    $default  reduce using rule 87 (jump_statement)


State 117

    5 primary_expression: '(' expression ')' .

    $default  reduce using rule 5 (primary_expression)


State 118

    7 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 7 (postfix_expression)


State 119

    8 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   10 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 144
    ','  shift, and go to state 145


State 120

    9 argument_expression_list: assignment_expression .

    $default  reduce using rule 9 (argument_expression_list)


State 121

   28 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 28 (assignment_expression)


State 122

   13 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 13 (multiplicative_expression)


State 123

   14 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 14 (multiplicative_expression)


State 124

   15 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 15 (multiplicative_expression)


State 125

   12 multiplicative_expression: unary_expression .

    $default  reduce using rule 12 (multiplicative_expression)


State 126

   13 multiplicative_expression: multiplicative_expression . '*' unary_expression
   14                          | multiplicative_expression . '/' unary_expression
   15                          | multiplicative_expression . '%' unary_expression
   17 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 17 (additive_expression)


State 127

   13 multiplicative_expression: multiplicative_expression . '*' unary_expression
   14                          | multiplicative_expression . '/' unary_expression
   15                          | multiplicative_expression . '%' unary_expression
   18 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 18 (additive_expression)


State 128

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   22 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 22 (relational_expression)


State 129

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   23 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 23 (relational_expression)


State 130

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   20 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 20 (relational_expression)


State 131

   17 additive_expression: additive_expression . '+' multiplicative_expression
   18                    | additive_expression . '-' multiplicative_expression
   21 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 21 (relational_expression)


State 132

   20 relational_expression: relational_expression . '<' additive_expression
   21                      | relational_expression . '>' additive_expression
   22                      | relational_expression . LE_OP additive_expression
   23                      | relational_expression . GE_OP additive_expression
   25 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 94
    GE_OP  shift, and go to state 95
    '<'    shift, and go to state 96
    '>'    shift, and go to state 97

    $default  reduce using rule 25 (equality_expression)


State 133

   20 relational_expression: relational_expression . '<' additive_expression
   21                      | relational_expression . '>' additive_expression
   22                      | relational_expression . LE_OP additive_expression
   23                      | relational_expression . GE_OP additive_expression
   26 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 94
    GE_OP  shift, and go to state 95
    '<'    shift, and go to state 96
    '>'    shift, and go to state 97

    $default  reduce using rule 26 (equality_expression)


State 134

   30 expression: expression ',' assignment_expression .

    $default  reduce using rule 30 (expression)


State 135

   74 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 74 (compound_statement)


State 136

   62 direct_abstract_declarator: '(' ')' .

    $default  reduce using rule 62 (direct_abstract_declarator)


State 137

   54 parameter_list: parameter_list . ',' parameter_declaration
   63 direct_abstract_declarator: '(' parameter_list . ')'

    ')'  shift, and go to state 146
    ','  shift, and go to state 111


State 138

   61 direct_abstract_declarator: '(' abstract_declarator . ')'

    ')'  shift, and go to state 147


State 139

   64 direct_abstract_declarator: direct_abstract_declarator '(' . ')'
   65                           | direct_abstract_declarator '(' . parameter_list ')'

    EXTERN    shift, and go to state 2
    AUTO      shift, and go to state 3
    INT       shift, and go to state 4
    VOID      shift, and go to state 5
    FUNCTION  shift, and go to state 6
    ')'       shift, and go to state 148

    declaration_specifiers   go to state 70
    storage_class_specifier  go to state 11
    type_specifier           go to state 12
    parameter_list           go to state 149
    parameter_declaration    go to state 72


State 140

   54 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 54 (parameter_list)


State 141

   59 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 59 (identifier_list)


State 142

   81 selection_statement: IF '(' expression ')' . statement
   82                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 77
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    statement                  go to state 150
    compound_statement         go to state 59
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65


State 143

   83 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 77
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    statement                  go to state 151
    compound_statement         go to state 59
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65


State 144

    8 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 8 (postfix_expression)


State 145

   10 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    '('             shift, and go to state 77

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 152


State 146

   63 direct_abstract_declarator: '(' parameter_list ')' .

    $default  reduce using rule 63 (direct_abstract_declarator)


State 147

   61 direct_abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 61 (direct_abstract_declarator)


State 148

   64 direct_abstract_declarator: direct_abstract_declarator '(' ')' .

    $default  reduce using rule 64 (direct_abstract_declarator)


State 149

   54 parameter_list: parameter_list . ',' parameter_declaration
   65 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list . ')'

    ')'  shift, and go to state 153
    ','  shift, and go to state 111


State 150

   81 selection_statement: IF '(' expression ')' statement .
   82                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 154

    ELSE      [reduce using rule 81 (selection_statement)]
    $default  reduce using rule 81 (selection_statement)


State 151

   83 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 83 (iteration_statement)


State 152

   10 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 10 (argument_expression_list)


State 153

   65 direct_abstract_declarator: direct_abstract_declarator '(' parameter_list ')' .

    $default  reduce using rule 65 (direct_abstract_declarator)


State 154

   82 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 76
    CONSTANT        shift, and go to state 39
    STRING_LITERAL  shift, and go to state 40
    IF              shift, and go to state 41
    WHILE           shift, and go to state 42
    CONTINUE        shift, and go to state 43
    BREAK           shift, and go to state 44
    RETURN          shift, and go to state 45
    '('             shift, and go to state 77
    ';'             shift, and go to state 47
    '{'             shift, and go to state 26

    primary_expression         go to state 49
    postfix_expression         go to state 50
    unary_expression           go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    assignment_expression      go to state 56
    expression                 go to state 57
    statement                  go to state 155
    compound_statement         go to state 59
    expression_statement       go to state 62
    selection_statement        go to state 63
    iteration_statement        go to state 64
    jump_statement             go to state 65


State 155

   82 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 82 (selection_statement)
